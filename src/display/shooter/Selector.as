package display.shooter{	import display.map.Block;		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;

	public class Selector extends MovieClip{		protected var _root:TowerDefense;				private var shooters:Vector.<Shooter>;				private const radius:Number = 30;				private var _block:Block;				public function Selector(root:TowerDefense){			_root = root;						graphics.beginFill(0x006600,.5);			graphics.drawCircle(0,0,radius);			graphics.endFill();			graphics.beginFill(0x006600,.5);			graphics.drawRect(-_root.gridScaleHalf,-_root.gridScaleHalf,_root.gridScale,_root.gridScale);			graphics.endFill();						shooters = new Vector.<Shooter>();			shooters.push(new Turret(_root));			shooters.push(new Freezer(_root));			shooters.push(new Catapult(_root));						var angle:Number;			for(var i:uint = 0; i<shooters.length; i++)			{				angle = i/shooters.length*Math.PI*2+Math.PI/2;				shooters[i].disable();				shooters[i].x = Math.sin(angle) * (radius - _root.gridScaleHalf);				shooters[i].y = Math.cos(angle) * (radius - _root.gridScaleHalf);				shooters[i].scaleX = shooters[i].scaleY = 0.7;				shooters[i].addEventListener(MouseEvent.CLICK, onShooterSelect);				addChild(shooters[i]);			}						this.addEventListener(Event.ADDED, beginClass);			this.addEventListener(Event.ENTER_FRAME, update);			this.addEventListener(MouseEvent.ROLL_OUT, destroyThis);		}				private function beginClass(e:Event):void{			this.removeEventListener(Event.ADDED, beginClass);		}				private function update(e:Event):void{			for(var i:uint = 0; i<shooters.length; i++)			{				if(_root.game.money >= shooters[i].cost){//if the player has enough money					shooters[i].alpha = 1;					shooters[i].scaleX = shooters[i].scaleY = 0.8;				}else{					shooters[i].scaleX = shooters[i].scaleY = 0.7;					shooters[i].alpha = 0.3;				}			}		}				private function onShooterSelect(e:MouseEvent):void		{			var shooter:Shooter = e.currentTarget as Shooter;						if(_root.game.money >= shooter.cost){//if the player has enough money				var newShooter:Shooter;				if(shooter is Turret){					newShooter = new Turret(_root);				}else if(shooter is Freezer){					newShooter = new Freezer(_root);				}else if(shooter is Catapult){					newShooter = new Catapult(_root);				}				newShooter.x = this.x;				newShooter.y = this.y;				_root.game.addChild(newShooter);								_root.game.money -= shooter.cost; //spend the money								_block.disable();								destroyThis();			}		}				public function select(block:Block):void		{			_block = block;						this.x = _block.x+_root.gridScaleHalf;			this.y = _block.y+_root.gridScaleHalf;						_root.game.addChild(this);		}				public function destroyThis(e:MouseEvent=null):void{			_block = null;			if(this.parent) if(this.parent.contains(this)) this.parent.removeChild(this);		}	}}