package display.bullet{	import display.enemy.Enemy;		import flash.display.MovieClip;	import flash.events.Event;

	public class Bullet extends MovieClip {		protected var _root:TowerDefense;				//these two variables below must be set to public so that we can edit them outside the class		public var target:Enemy;//the target that this guy is moving towards		public var damage:int;//how much damage this guy inflicts on the enemy		public var maxDistance:Number;				protected var xSpeed:Number;//how fast it's moving horizontally		protected var ySpeed:Number;//how fast it's moving vertically		public var maxSpeed:Number = 5;//how fast it can go				protected var xOrigin:Number;		protected var yOrigin:Number;				public function Bullet(root:TowerDefense) {			_root = root;//setting the root						mouseChildren = false;			mouseEnabled = false;						addEventListener(Event.ADDED,beginClass);//this will run every time this guy is made			addEventListener(Event.ENTER_FRAME,update);//this will run every frame		}				protected function beginClass(e:Event):void {			xOrigin = x;			yOrigin = y;						//drawing this guy (it'll be a small white circle)			this.graphics.beginFill(0xFFFFFF);			this.graphics.drawCircle(0,0,2);			this.graphics.endFill();		}				protected function update(e:Event):void {			var yDist:Number=target.y+_root.gridScaleHalf - this.y;//how far this guy is from the enemy (x)			var xDist:Number=target.x+_root.gridScaleHalf - this.x;//how far it is from the enemy (y)			var angle:Number=Math.atan2(yDist,xDist);//the angle that it must move			ySpeed=Math.sin(angle) * maxSpeed;//calculate how much it should move the enemy vertically			xSpeed=Math.cos(angle) * maxSpeed;//calculate how much it should move the enemy horizontally			//move the bullet towards the enemy			this.x+= xSpeed;			this.y+= ySpeed;						if(this.hitTestObject(target)){//if it touches the enemy				onHit();				destroyThis();//and destroy this guy			}else if(target == null || _root.game.isOver == true){//destroy it if game is over				destroyThis();			}else if(Math.sqrt(Math.pow(x - xOrigin, 2) + Math.pow(y - yOrigin, 2)) > maxDistance){				destroyThis();			}		}				protected function onHit():void{			target.health -= damage;//make it lose some health		}				public function destroyThis():void{			//this function will just remove this guy from the stage			this.removeEventListener(Event.ENTER_FRAME, update);			if(this.parent) if(this.parent.contains(this)) this.parent.removeChild(this);		}	}}